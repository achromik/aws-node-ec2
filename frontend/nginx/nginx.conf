http {

  server {
    listen 80;
    server_name ec2-app.achromik.pl;
    return 301 https://ec2-app.achromik.pl$request_uri;
  }

  server {
    listen 443 ssl;
    server_name ec2-app.achromik.pl;

    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    access_log /var/log/nginx/data-access.log combined;

    # serve the static files

    location / {
      root /usr/share/nginx/html;
    }

    # fetch data from proxied server when /api is called

    location /api/v1 {
      proxy_pass http://backend:3000/api/v1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_redirect http://backend:3000/api/v1 $scheme://$http_host/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_read_timeout 20d;
      proxy_buffering off;
    }

  }

  # server {
  #   listen 80;
  #   server_name ec2-app.achromik.pl;
  #   location / {
  #     # This would be the directory where your React app's static files are stored at
  #     root /usr/share/nginx/html;
  #     try_files $uri /index.html;
  #   }

  #   location /api/v1 {
  # proxy_set_header X-Real-IP $remote_addr;
  # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  # proxy_set_header X-NginX-Proxy true;
  # proxy_pass http://backend:3000/api/v1;
  # proxy_ssl_session_reuse off;
  # proxy_set_header Host $http_host;
  # proxy_cache_bypass $http_upgrade;
  # proxy_redirect off;
  #   }
  # }
}
